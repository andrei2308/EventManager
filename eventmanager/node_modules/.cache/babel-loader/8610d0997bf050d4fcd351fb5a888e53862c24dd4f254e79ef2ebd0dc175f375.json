{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BasePath = void 0;\nconst fs_routes_1 = require(\"fs-routes\");\nconst openapi_default_setter_1 = require(\"openapi-default-setter\");\nconst openapi_request_coercer_1 = require(\"openapi-request-coercer\");\nconst openapi_request_validator_1 = require(\"openapi-request-validator\");\nconst openapi_response_validator_1 = require(\"openapi-response-validator\");\nconst openapi_schema_validator_1 = require(\"openapi-schema-validator\");\nconst openapi_security_handler_1 = require(\"openapi-security-handler\");\nconst BasePath_1 = require(\"./src/BasePath\");\nexports.BasePath = BasePath_1.default;\nconst types_1 = require(\"./src/types\");\nconst util_1 = require(\"./src/util\");\nclass OpenAPIFramework {\n  constructor(args = {}) {\n    this.args = args;\n    this.name = args.name;\n    this.featureType = args.featureType;\n    this.loggingPrefix = args.name ? `${this.name}: ` : '';\n    this.logger = args.logger ? args.logger : new types_1.ConsoleDebugAdapterLogger();\n    // monkey patch for node v6:\n    if (!this.logger.debug) {\n      this.logger.debug = this.logger.info;\n    }\n    [{\n      name: 'apiDoc',\n      required: true\n    }, {\n      name: 'errorTransformer',\n      type: 'function'\n    }, {\n      name: 'externalSchemas',\n      type: 'object'\n    }, {\n      name: 'featureType',\n      required: true\n    }, {\n      name: 'name',\n      required: true\n    }, {\n      name: 'pathSecurity',\n      class: Array,\n      className: 'Array'\n    }, {\n      name: 'securityHandlers',\n      type: 'object'\n    }].forEach(arg => {\n      if (arg.required && !(arg.name in args)) {\n        throw new Error(`${this.loggingPrefix}args.${arg.name} is required`);\n      }\n      if (arg.type && arg.name in args && typeof args[arg.name] !== arg.type) {\n        throw new Error(`${this.loggingPrefix}args.${arg.name} must be a ${arg.type} when given`);\n      }\n      if (arg.class && arg.name in args && !(args[arg.name] instanceof arg.class)) {\n        throw new Error(`${this.loggingPrefix}args.${arg.name} must be an instance of ${arg.className} when given`);\n      }\n    });\n    if (!args.paths && !args.operations) {\n      throw new Error(`${this.loggingPrefix}args.paths and args.operations must not both be empty`);\n    }\n    this.enableObjectCoercion = !!args.enableObjectCoercion;\n    this.originalApiDoc = (0, util_1.handleYaml)((0, util_1.handleFilePath)(args.apiDoc));\n    this.apiDoc = (0, util_1.copy)(this.originalApiDoc);\n    this.basePaths = this.apiDoc.openapi ? (0, util_1.getBasePathsFromServers)(this.apiDoc.servers) : [new BasePath_1.default({\n      url: (this.apiDoc.basePath || '').replace(/\\/$/, '')\n    })];\n    this.validateApiDoc = 'validateApiDoc' in args ? !!args.validateApiDoc : true;\n    this.validator = new openapi_schema_validator_1.default({\n      version: this.apiDoc.openapi || this.apiDoc.swagger,\n      extensions: this.apiDoc[`x-${this.name}-schema-extension`]\n    });\n    this.customFormats = args.customFormats;\n    this.customKeywords = args.customKeywords;\n    this.dependencies = args.dependencies;\n    this.errorTransformer = args.errorTransformer;\n    this.externalSchemas = args.externalSchemas;\n    this.features = args.features;\n    this.operations = args.operations;\n    this.paths = args.paths;\n    this.pathsIgnore = args.pathsIgnore;\n    this.pathSecurity = Array.isArray(args.pathSecurity) ? args.pathSecurity : [];\n    this.routesGlob = args.routesGlob;\n    this.routesIndexFileRegExp = args.routesIndexFileRegExp;\n    this.securityHandlers = args.securityHandlers;\n    this.pathSecurity.forEach(util_1.assertRegExpAndSecurity.bind(null, this));\n    if (this.validateApiDoc) {\n      const apiDocValidation = this.validator.validate(this.apiDoc);\n      if (apiDocValidation.errors.length) {\n        this.logger.error(`${this.loggingPrefix}Validating schema before populating paths`);\n        this.logger.error(`${this.loggingPrefix}validation errors`, JSON.stringify(apiDocValidation.errors, null, '  '));\n        throw new Error(`${this.loggingPrefix}args.apiDoc was invalid.  See the output.`);\n      }\n    }\n  }\n  async initialize(visitor) {\n    const securitySchemes = this.apiDoc.openapi ? (this.apiDoc.components || {}).securitySchemes : this.apiDoc.securityDefinitions;\n    const apiSecurityMiddleware = this.securityHandlers && this.apiDoc.security && securitySchemes ? new openapi_security_handler_1.default({\n      securityDefinitions: securitySchemes,\n      securityHandlers: this.securityHandlers,\n      operationSecurity: this.apiDoc.security,\n      loggingKey: `${this.name}-security`\n    }) : null;\n    let paths = [];\n    let routes = [];\n    const routesCheckMap = {};\n    if (this.paths) {\n      paths = [].concat(this.paths);\n      this.logger.debug(`${this.loggingPrefix}paths=`, paths);\n      for (let pathItem of paths) {\n        if ((0, util_1.byString)(pathItem)) {\n          pathItem = (0, util_1.toAbsolutePath)(pathItem);\n          if (!(0, util_1.byDirectory)(pathItem)) {\n            throw new Error(`${this.loggingPrefix}args.paths contained a value that was not a path to a directory`);\n          }\n          routes = routes.concat(await Promise.all((0, fs_routes_1.default)(pathItem, {\n            glob: this.routesGlob,\n            indexFileRegExp: this.routesIndexFileRegExp\n          }).filter(fsRoutesItem => {\n            return this.pathsIgnore ? !this.pathsIgnore.test(fsRoutesItem.route) : true;\n          }).map(async fsRoutesItem => {\n            routesCheckMap[fsRoutesItem.route] = true;\n            // There are two cases to distinguish:\n            // - file is a CommonJS script, and `module.export` appears\n            //   as `default` property\n            // - file is a ECMAScript module, and `export default` appears\n            //   at top-level\n            const imported = await import(`file://${fsRoutesItem.path}`);\n            return {\n              path: fsRoutesItem.route,\n              module: imported.default ?? imported\n            };\n          })));\n        } else {\n          if (!pathItem.path || !pathItem.module) {\n            throw new Error(`${this.loggingPrefix}args.paths must consist of strings or valid route specifications`);\n          }\n          routes.push(pathItem);\n        }\n      }\n      routes = routes.sort(util_1.byRoute);\n    }\n    if (this.operations) {\n      const apiDocPaths = this.apiDoc.paths;\n      Object.keys(apiDocPaths).forEach(apiDocPathUrl => {\n        const pathDoc = apiDocPaths[apiDocPathUrl];\n        const route = {\n          path: apiDocPathUrl,\n          module: Object.keys(pathDoc).filter(util_1.byMethods).reduce((acc, method) => {\n            const methodDoc = pathDoc[util_1.METHOD_ALIASES[method]];\n            const operationId = methodDoc.operationId;\n            if (operationId && operationId in this.operations) {\n              const operation = this.operations[operationId];\n              acc[util_1.METHOD_ALIASES[method]] = (() => {\n                /**\n                 * We have two options:\n                 *\n                 * 1. the middleware gets bound + dependency injected, this may be breaking.\n                 * 2. we pick the last middleware as the operation handler. This means we cannot support\n                 *    _after_ middlewares (though not a common express pattern)\n                 */\n                const innerFunction = Array.isArray(operation) ? operation.map(middleware => middleware.bind({\n                  dependencies: this.dependencies\n                })) : operation.bind({\n                  dependencies: this.dependencies\n                });\n                innerFunction.apiDoc = methodDoc;\n                return innerFunction;\n              })();\n            } else if (operationId === undefined) {\n              this.logger.warn(`${this.loggingPrefix}path ${apiDocPathUrl}, operation ${method} is missing an operationId`);\n            } else {\n              this.logger.warn(`${this.loggingPrefix}Operation ${operationId} not found in the operations parameter`);\n            }\n            return acc;\n          }, {})\n        };\n        if (routesCheckMap[route.path]) {\n          this.logger.warn(`${this.loggingPrefix}Overriding path ${route.path} with handlers from operations`);\n          const routeIndex = routes.findIndex(r => r.path === route.path);\n          routes[routeIndex] = {\n            ...routes[routeIndex],\n            ...route,\n            module: {\n              ...((routes[routeIndex] || {}).module || {}),\n              ...(route.module || {})\n            }\n          };\n        } else {\n          routes.push(route);\n        }\n      });\n    }\n    this.logger.debug(`${this.loggingPrefix}routes=`, routes);\n    // Check for duplicate routes\n    const dups = routes.filter((v, i, o) => {\n      if (i > 0 && v.path === o[i - 1].path) {\n        return v.path;\n      }\n    });\n    if (dups.length > 0) {\n      throw new Error(`${this.loggingPrefix}args.paths produced duplicate urls for \"${dups[0].path}\"`);\n    }\n    const getApiDoc = () => {\n      return (0, util_1.copy)(this.apiDoc);\n    };\n    routes.forEach(routeItem => {\n      const route = routeItem.path;\n      this.logger.debug(`${this.loggingPrefix}setting up`, route);\n      const pathModule = (0, util_1.injectDependencies)(routeItem.module.default || routeItem.module, this.dependencies);\n      // express path params start with :paramName\n      // openapi path params use {paramName}\n      const openapiPath = route;\n      // Do not make modifications to this.\n      const originalPathItem = this.originalApiDoc.paths[openapiPath] || {};\n      const pathDoc = this.apiDoc.paths[openapiPath] || {};\n      const pathParameters = pathDoc.parameters || [];\n      // push all parameters defined in the path module to the path parameter list\n      if (Array.isArray(pathModule.parameters)) {\n        [].push.apply(pathParameters, pathModule.parameters);\n      }\n      pathDoc.parameters = pathParameters;\n      this.apiDoc.paths[openapiPath] = pathDoc;\n      const methodsProcessed = {};\n      new Set(Object.keys(pathModule).concat(Object.keys(pathDoc)).filter(util_1.byMethods)).forEach(methodAlias => {\n        const methodName = util_1.METHOD_ALIASES[methodAlias];\n        if (methodName in methodsProcessed) {\n          this.logger.warn(`${this.loggingPrefix}${openapiPath}.${methodAlias} has already been defined as ${openapiPath}.${methodsProcessed[methodName]}. Ignoring the 2nd definition...`);\n          return;\n        }\n        methodsProcessed[methodName] = methodAlias;\n        // operationHandler may be an array or a function.\n        const operationHandler = pathModule[methodAlias] || routeItem.module[(pathDoc?.[methodAlias] || {}).operationId];\n        const operationDoc = (0, util_1.handleYaml)((0, util_1.getMethodDoc)(operationHandler)) || pathDoc[methodName];\n        // consumes is defined as property of each operation or entire document\n        // in Swagger 2.0. For OpenAPI 3.0 consumes mime types are defined as the\n        // key value(s) for each operation requestBody.content object.\n        const consumes = operationDoc && Array.isArray(operationDoc.consumes) ? operationDoc.consumes : operationDoc && operationDoc.requestBody && (operationDoc.requestBody.content || operationDoc.requestBody.$ref) ? Object.keys((0, util_1.resolveRequestBodyRefs)(this, operationDoc.requestBody, this.apiDoc).content) : Array.isArray(this.apiDoc.consumes) ? this.apiDoc.consumes : [];\n        const operationContext = {\n          additionalFeatures: (0, util_1.getAdditionalFeatures)(this, this.logger, this.originalApiDoc, originalPathItem, pathModule, operationDoc),\n          allowsFeatures: (0, util_1.allowsFeatures)(this, this.apiDoc, pathModule, pathDoc, operationDoc),\n          apiDoc: this.apiDoc,\n          basePaths: this.basePaths,\n          consumes,\n          features: {},\n          methodName,\n          methodParameters: [],\n          operationDoc,\n          operationHandler,\n          path: openapiPath\n        };\n        if (operationDoc) {\n          pathDoc[methodName] = operationDoc;\n          if (operationDoc.tags) {\n            (0, util_1.sortOperationDocTags)(operationDoc);\n            operationDoc.tags.forEach(util_1.addOperationTagToApiDoc.bind(null, this.apiDoc));\n          }\n          if (operationContext.allowsFeatures) {\n            // add features\n            if (operationDoc.responses && (0, util_1.allowsResponseValidationFeature)(this, this.apiDoc, pathModule, pathDoc, operationDoc)) {\n              const ResponseValidatorClass = this.features?.responseValidator || openapi_response_validator_1.default;\n              // add response validation feature\n              // it's invalid for a method doc to not have responses, but the post\n              // validation will pick it up, so this is almost always going to be added.\n              const responseValidator = new ResponseValidatorClass({\n                loggingKey: `${this.name}-response-validation`,\n                components: this.apiDoc.components,\n                definitions: this.apiDoc.definitions,\n                externalSchemas: this.externalSchemas,\n                errorTransformer: this.errorTransformer,\n                responses: (0, util_1.resolveResponseRefs)(this, operationDoc.responses, this.apiDoc, route),\n                customFormats: this.customFormats\n              });\n              operationContext.features.responseValidator = responseValidator;\n            }\n            const methodParameters = (0, util_1.withNoDuplicates)((0, util_1.resolveParameterRefs)(this, Array.isArray(operationDoc.parameters) ? pathParameters.concat(operationDoc.parameters) : pathParameters, this.apiDoc));\n            operationContext.methodParameters = methodParameters;\n            const requestBody = (0, util_1.resolveRequestBodyRefs)(this, operationDoc.requestBody, this.apiDoc);\n            if (methodParameters.length || operationDoc.requestBody) {\n              // defaults, coercion, and parameter validation middleware\n              if ((0, util_1.allowsValidationFeature)(this, this.apiDoc, pathModule, pathDoc, operationDoc)) {\n                const RequestValidatorClass = this.features?.requestValidator || openapi_request_validator_1.default;\n                const requestValidator = new RequestValidatorClass({\n                  errorTransformer: this.errorTransformer,\n                  logger: this.logger,\n                  parameters: methodParameters,\n                  schemas: this.apiDoc.definitions,\n                  componentSchemas: this.apiDoc.components // v3\n                  ? this.apiDoc.components.schemas : undefined,\n                  externalSchemas: this.externalSchemas,\n                  customFormats: this.customFormats,\n                  customKeywords: this.customKeywords,\n                  requestBody\n                });\n                operationContext.features.requestValidator = requestValidator;\n                this.logger.debug(`${this.loggingPrefix}request validator on for`, methodName, openapiPath);\n              }\n              if ((0, util_1.allowsCoercionFeature)(this, this.apiDoc, pathModule, pathDoc, operationDoc)) {\n                const CoercerClass = this.features?.coercer || openapi_request_coercer_1.default;\n                const coercer = new CoercerClass({\n                  extensionBase: `x-${this.name}-coercion`,\n                  loggingKey: `${this.name}-coercion`,\n                  parameters: methodParameters,\n                  requestBody,\n                  enableObjectCoercion: this.enableObjectCoercion\n                });\n                operationContext.features.coercer = coercer;\n              }\n              // no point in default feature if we don't have any parameters with defaults.\n              if (methodParameters.filter(util_1.byDefault).length && (0, util_1.allowsDefaultsFeature)(this, this.apiDoc, pathModule, pathDoc, operationDoc)) {\n                const DefaultSetterClass = this.features?.defaultSetter || openapi_default_setter_1.default;\n                const defaultSetter = new DefaultSetterClass({\n                  parameters: methodParameters\n                });\n                operationContext.features.defaultSetter = defaultSetter;\n              }\n            }\n            let securityFeature;\n            let securityDefinition;\n            if (this.securityHandlers && securitySchemes) {\n              if (operationDoc.security) {\n                securityDefinition = operationDoc.security;\n              } else if (this.pathSecurity.length) {\n                securityDefinition = (0, util_1.getSecurityDefinitionByPath)(openapiPath, this.pathSecurity);\n              }\n            }\n            if (securityDefinition) {\n              pathDoc[methodName].security = securityDefinition;\n              const SecurityHandlerClass = this.features?.securityHandler || openapi_security_handler_1.default;\n              securityFeature = new SecurityHandlerClass({\n                securityDefinitions: securitySchemes,\n                securityHandlers: this.securityHandlers,\n                operationSecurity: securityDefinition,\n                loggingKey: `${this.name}-security`\n              });\n            } else if (apiSecurityMiddleware) {\n              securityFeature = apiSecurityMiddleware;\n            }\n            if (securityFeature) {\n              operationContext.features.securityHandler = securityFeature;\n            }\n          }\n        }\n        if (visitor.visitOperation) {\n          visitor.visitOperation(operationContext);\n        }\n      });\n      if (visitor.visitPath) {\n        visitor.visitPath({\n          basePaths: this.basePaths,\n          getApiDoc,\n          getPathDoc: () => (0, util_1.copy)(pathDoc)\n        });\n      }\n    });\n    (0, util_1.sortApiDocTags)(this.apiDoc);\n    if (this.validateApiDoc) {\n      const apiDocValidation = this.validator.validate(this.apiDoc);\n      if (apiDocValidation.errors.length) {\n        this.logger.error(`${this.loggingPrefix}Validating schema after populating paths`);\n        this.logger.error(`${this.loggingPrefix}validation errors`, JSON.stringify(apiDocValidation.errors, null, '  '));\n        throw new Error(`${this.loggingPrefix}args.apiDoc was invalid after populating paths.  See the output.`);\n      }\n    }\n    if (visitor.visitApi) {\n      visitor.visitApi({\n        basePaths: this.basePaths,\n        getApiDoc\n      });\n    }\n  }\n}\nexports.default = OpenAPIFramework;","map":{"version":3,"names":["fs_routes_1","require","openapi_default_setter_1","openapi_request_coercer_1","openapi_request_validator_1","openapi_response_validator_1","openapi_schema_validator_1","openapi_security_handler_1","BasePath_1","exports","BasePath","default","types_1","util_1","OpenAPIFramework","constructor","args","name","featureType","loggingPrefix","logger","ConsoleDebugAdapterLogger","debug","info","required","type","class","Array","className","forEach","arg","Error","paths","operations","enableObjectCoercion","originalApiDoc","handleYaml","handleFilePath","apiDoc","copy","basePaths","openapi","getBasePathsFromServers","servers","url","basePath","replace","validateApiDoc","validator","version","swagger","extensions","customFormats","customKeywords","dependencies","errorTransformer","externalSchemas","features","pathsIgnore","pathSecurity","isArray","routesGlob","routesIndexFileRegExp","securityHandlers","assertRegExpAndSecurity","bind","apiDocValidation","validate","errors","length","error","JSON","stringify","initialize","visitor","securitySchemes","components","securityDefinitions","apiSecurityMiddleware","security","operationSecurity","loggingKey","routes","routesCheckMap","concat","pathItem","byString","toAbsolutePath","byDirectory","Promise","all","glob","indexFileRegExp","filter","fsRoutesItem","test","route","map","imported","path","module","push","sort","byRoute","apiDocPaths","Object","keys","apiDocPathUrl","pathDoc","byMethods","reduce","acc","method","methodDoc","METHOD_ALIASES","operationId","operation","innerFunction","middleware","undefined","warn","routeIndex","findIndex","r","dups","v","i","o","getApiDoc","routeItem","pathModule","injectDependencies","openapiPath","originalPathItem","pathParameters","parameters","apply","methodsProcessed","Set","methodAlias","methodName","operationHandler","operationDoc","getMethodDoc","consumes","requestBody","content","$ref","resolveRequestBodyRefs","operationContext","additionalFeatures","getAdditionalFeatures","allowsFeatures","methodParameters","tags","sortOperationDocTags","addOperationTagToApiDoc","responses","allowsResponseValidationFeature","ResponseValidatorClass","responseValidator","definitions","resolveResponseRefs","withNoDuplicates","resolveParameterRefs","allowsValidationFeature","RequestValidatorClass","requestValidator","schemas","componentSchemas","allowsCoercionFeature","CoercerClass","coercer","extensionBase","byDefault","allowsDefaultsFeature","DefaultSetterClass","defaultSetter","securityFeature","securityDefinition","getSecurityDefinitionByPath","SecurityHandlerClass","securityHandler","visitOperation","visitPath","getPathDoc","sortApiDocTags","visitApi"],"sources":["../index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}