{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBasePathsFromServers = exports.withNoDuplicates = exports.toAbsolutePath = exports.sortOperationDocTags = exports.sortApiDocTags = exports.resolveRequestBodyRefs = exports.resolveResponseRefs = exports.resolveParameterRefs = exports.isDynamicRoute = exports.injectDependencies = exports.handleYaml = exports.handleFilePath = exports.getMethodDoc = exports.getSecurityDefinitionByPath = exports.getAdditionalFeatures = exports.copy = exports.byTag = exports.byString = exports.byRoute = exports.byMethods = exports.byDirectory = exports.byDefault = exports.assertRegExpAndSecurity = exports.allowsValidationFeature = exports.allowsResponseValidationFeature = exports.allowsFeatures = exports.allowsDefaultsFeature = exports.allowsCoercionFeature = exports.addOperationTagToApiDoc = exports.METHOD_ALIASES = void 0;\nconst BasePath_1 = require(\"./BasePath\");\nconst difunc = require('difunc');\nconst fs = require('fs');\nconst isDir = require('is-dir');\nconst jsYaml = require('js-yaml');\nconst path = require('path');\nexports.METHOD_ALIASES = {\n  // HTTP style\n  DELETE: 'delete',\n  GET: 'get',\n  HEAD: 'head',\n  OPTIONS: 'options',\n  PATCH: 'patch',\n  POST: 'post',\n  PUT: 'put',\n  // js style\n  del: 'delete',\n  delete: 'delete',\n  get: 'get',\n  head: 'head',\n  options: 'options',\n  patch: 'patch',\n  post: 'post',\n  put: 'put'\n};\nfunction addOperationTagToApiDoc(apiDoc, tag) {\n  const apiDocTags = apiDoc.tags || [];\n  const availableTags = apiDocTags.map(t => {\n    return t && t.name;\n  });\n  if (availableTags.indexOf(tag) === -1) {\n    apiDocTags.push({\n      name: tag\n    });\n  }\n  apiDoc.tags = apiDocTags;\n}\nexports.addOperationTagToApiDoc = addOperationTagToApiDoc;\nfunction allows(docs, prop, val) {\n  return ![].slice.call(docs).filter(byProperty(prop, val)).length;\n}\nfunction allowsCoercionFeature(framework, ...docs) {\n  return allows(arguments, `x-${framework.name}-disable-coercion-${framework.featureType}`, true);\n}\nexports.allowsCoercionFeature = allowsCoercionFeature;\nfunction allowsDefaultsFeature(framework, ...docs) {\n  return allows(arguments, `x-${framework.name}-disable-defaults-${framework.featureType}`, true);\n}\nexports.allowsDefaultsFeature = allowsDefaultsFeature;\nfunction allowsFeatures(framework, ...docs) {\n  return allows(docs, `x-${framework.name}-disable-${framework.featureType}`, true);\n}\nexports.allowsFeatures = allowsFeatures;\nfunction allowsResponseValidationFeature(framework, ...docs) {\n  return allows(arguments, `x-${framework.name}-disable-response-validation-${framework.featureType}`, true);\n}\nexports.allowsResponseValidationFeature = allowsResponseValidationFeature;\nfunction allowsValidationFeature(framework, ...docs) {\n  return allows(docs, `x-${framework.name}-disable-validation-${framework.featureType}`, true);\n}\nexports.allowsValidationFeature = allowsValidationFeature;\nfunction assertRegExpAndSecurity(framework, tuple) {\n  if (!Array.isArray(tuple)) {\n    throw new Error(`${framework.name}args.pathSecurity expects an array of tuples.`);\n  } else if (!(tuple[0] instanceof RegExp)) {\n    throw new Error(`${framework.name}args.pathSecurity tuples expect the first argument to be a RegExp.`);\n  } else if (!Array.isArray(tuple[1])) {\n    throw new Error(`${framework.name}args.pathSecurity tuples expect the second argument to be a security Array.`);\n  }\n}\nexports.assertRegExpAndSecurity = assertRegExpAndSecurity;\nfunction byDefault(param) {\n  return param && 'default' in param;\n}\nexports.byDefault = byDefault;\nfunction byDirectory(el) {\n  return isDir.sync(el);\n}\nexports.byDirectory = byDirectory;\nfunction byMethods(name) {\n  // not handling $ref at this time.  Please open an issue if you need this.\n  return name in exports.METHOD_ALIASES;\n}\nexports.byMethods = byMethods;\nfunction byProperty(property, value) {\n  return obj => {\n    return obj && property in obj && obj[property] === value;\n  };\n}\nfunction byRoute(a, b) {\n  if (isDynamicRoute(a.path) && !isDynamicRoute(b.path)) {\n    return 1;\n  }\n  if (!isDynamicRoute(a.path) && isDynamicRoute(b.path)) {\n    return -1;\n  }\n  // invert compare to keep that /{foo} does not beat /{foo}.{bar}\n  return -1 * a.path.localeCompare(b.path);\n}\nexports.byRoute = byRoute;\nfunction byString(el) {\n  return typeof el === 'string';\n}\nexports.byString = byString;\nfunction byTag(a, b) {\n  const aName = typeof a === 'string' ? a : (a || {\n    name: ''\n  }).name;\n  const bName = typeof b === 'string' ? b : (b || {\n    name: ''\n  }).name;\n  if (aName === bName) {\n    return 0;\n  } else if (aName < bName) {\n    return -1;\n  } else if (aName > bName) {\n    return 1;\n  }\n}\nexports.byTag = byTag;\nfunction copy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\nexports.copy = copy;\nfunction getAdditionalFeatures(framework, logger, ...docs) {\n  const additionalFeatures = [];\n  let index = docs.length - 1;\n  const inheritProperty = `x-${framework.name}-inherit-additional-${framework.featureType}`;\n  const additionalProperty = `x-${framework.name}-additional-${framework.featureType}`;\n  while (index > 0) {\n    --index;\n    const currentDoc = docs[index + 1];\n    const parentDoc = docs[index];\n    if (currentDoc && currentDoc[inheritProperty] === false) {\n      break;\n    } else {\n      [].unshift.apply(additionalFeatures, getDocFeature(parentDoc));\n    }\n  }\n  return additionalFeatures.filter(feature => {\n    if (typeof feature === 'function') {\n      return true;\n    } else {\n      logger.warn(`${framework.loggingPrefix}Ignoring ${feature} as ${framework.featureType} in ${additionalProperty} array.`);\n      return false;\n    }\n  });\n  function getDocFeature(doc) {\n    if (doc && Array.isArray(doc[additionalProperty])) {\n      return doc[additionalProperty];\n    }\n  }\n}\nexports.getAdditionalFeatures = getAdditionalFeatures;\nfunction getSecurityDefinitionByPath(openapiPath, pathSecurity) {\n  for (let i = pathSecurity.length; i--;) {\n    const tuple = pathSecurity[i];\n    if (tuple[0].test(openapiPath)) {\n      return tuple[1];\n    }\n  }\n}\nexports.getSecurityDefinitionByPath = getSecurityDefinitionByPath;\nfunction getMethodDoc(operationHandler) {\n  const doc = operationHandler && operationHandler.apiDoc || (Array.isArray(operationHandler) ? operationHandler.slice(-1)[0].apiDoc : null);\n  if (doc) {\n    return copy(doc);\n  }\n  return null;\n}\nexports.getMethodDoc = getMethodDoc;\nfunction handleFilePath(filePath) {\n  if (typeof filePath === 'string') {\n    const absolutePath = path.resolve(process.cwd(), filePath);\n    if (fs.existsSync(absolutePath)) {\n      try {\n        // json or module\n        return require(absolutePath);\n      } catch (e) {\n        return fs.readFileSync(absolutePath, 'utf8');\n      }\n    }\n  }\n  return filePath;\n}\nexports.handleFilePath = handleFilePath;\nfunction handleYaml(apiDoc) {\n  return typeof apiDoc === 'string' ? jsYaml.safeLoad(apiDoc, {\n    json: true\n  }) : apiDoc;\n}\nexports.handleYaml = handleYaml;\nfunction injectDependencies(handlers, dependencies) {\n  if (typeof handlers !== 'function') {\n    return handlers;\n  }\n  return difunc(dependencies || {}, handlers);\n}\nexports.injectDependencies = injectDependencies;\nfunction isDynamicRoute(route) {\n  return route.indexOf('{') > 0;\n}\nexports.isDynamicRoute = isDynamicRoute;\nfunction resolveParameterRefs(framework, parameters, apiDoc) {\n  return parameters.map(parameter => {\n    if (typeof parameter.$ref === 'string') {\n      const apiVersion = apiDoc.swagger ? apiDoc.swagger : apiDoc.openapi;\n      const apiDocParameters = apiVersion === '2.0' ? apiDoc.parameters : apiDoc.components.parameters;\n      const PARAMETER_REF_REGEX = apiVersion === '2.0' ? /^#\\/parameters\\/(.+)$/ : /^#\\/components\\/parameters\\/(.+)$/;\n      const match = PARAMETER_REF_REGEX.exec(parameter.$ref);\n      const definition = match && (apiDocParameters || {})[match[1]];\n      if (!definition) {\n        throw new Error(`${framework.name}: Invalid parameter $ref or definition not found in apiDoc.parameters: ${parameter.$ref}`);\n      }\n      return definition;\n    } else {\n      return parameter;\n    }\n  });\n}\nexports.resolveParameterRefs = resolveParameterRefs;\nfunction resolveResponseRefs(framework, responses, apiDoc, route) {\n  return Object.keys(responses).reduce((resolvedResponses, responseCode) => {\n    const response = responses[responseCode];\n    if (typeof response.$ref === 'string') {\n      const apiVersion = apiDoc.swagger ? apiDoc.swagger : apiDoc.openapi;\n      const apiDocResponses = apiVersion === '2.0' ? apiDoc.responses : apiDoc.components.responses;\n      const RESPONSE_REF_REGEX = apiVersion === '2.0' ? /^#\\/responses\\/(.+)$/ : /^#\\/components\\/responses\\/(.+)$/;\n      const match = RESPONSE_REF_REGEX.exec(response.$ref);\n      const definition = match && (apiDocResponses || {})[match[1]];\n      if (!definition) {\n        throw new Error(`${framework.name}: Invalid response $ref or definition not found in apiDoc.responses: ${response.$ref}`);\n      }\n      resolvedResponses[responseCode] = definition;\n    } else {\n      resolvedResponses[responseCode] = response;\n    }\n    return resolvedResponses;\n  }, {});\n}\nexports.resolveResponseRefs = resolveResponseRefs;\nfunction resolveRequestBodyRefs(framework, requestBody, apiDoc) {\n  if (requestBody && typeof requestBody.$ref === 'string') {\n    const REQUEST_BODY_REF_REGEX = /^#\\/components\\/requestBodies\\/(.+)$/;\n    const match = REQUEST_BODY_REF_REGEX.exec(requestBody.$ref);\n    const apiDocComponents = apiDoc.components;\n    const apiDocReqBodies = apiDocComponents && apiDocComponents.requestBodies;\n    const definition = match && (apiDocReqBodies || {})[match[1]];\n    if (!definition) {\n      throw new Error(`${framework.name}: Invalid requestBody $ref or definition not found in apiDoc.components.requestBodies: ${requestBody.$ref}`);\n    }\n    return definition;\n  } else {\n    return requestBody;\n  }\n}\nexports.resolveRequestBodyRefs = resolveRequestBodyRefs;\nfunction sortApiDocTags(apiDoc) {\n  if (apiDoc && Array.isArray(apiDoc.tags)) {\n    apiDoc.tags.sort(byTag);\n  }\n}\nexports.sortApiDocTags = sortApiDocTags;\nfunction sortOperationDocTags(operationDoc) {\n  operationDoc.tags.sort(byTag);\n}\nexports.sortOperationDocTags = sortOperationDocTags;\nfunction toAbsolutePath(part) {\n  return path.resolve(process.cwd(), part);\n}\nexports.toAbsolutePath = toAbsolutePath;\nfunction withNoDuplicates(arr) {\n  const parameters = [];\n  const seenParams = {};\n  let index = arr.length;\n  while (index > 0) {\n    --index;\n    const item = arr[index];\n    const key = [item.name, item.location].join(';////|||||\\\\\\\\;');\n    if (key in seenParams) {\n      continue;\n    }\n    seenParams[key] = true;\n    // unshifting to preserve ordering.\n    parameters.unshift(item);\n  }\n  return parameters;\n}\nexports.withNoDuplicates = withNoDuplicates;\nfunction getBasePathsFromServers(servers) {\n  if (!servers) {\n    return [new BasePath_1.default({\n      url: ''\n    })];\n  }\n  const basePathsMap = {};\n  for (const server of servers) {\n    const basePath = new BasePath_1.default(server);\n    basePathsMap[basePath.path] = basePath;\n  }\n  return Object.keys(basePathsMap).map(key => basePathsMap[key]);\n}\nexports.getBasePathsFromServers = getBasePathsFromServers;","map":{"version":3,"names":["BasePath_1","require","difunc","fs","isDir","jsYaml","path","exports","METHOD_ALIASES","DELETE","GET","HEAD","OPTIONS","PATCH","POST","PUT","del","delete","get","head","options","patch","post","put","addOperationTagToApiDoc","apiDoc","tag","apiDocTags","tags","availableTags","map","t","name","indexOf","push","allows","docs","prop","val","slice","call","filter","byProperty","length","allowsCoercionFeature","framework","arguments","featureType","allowsDefaultsFeature","allowsFeatures","allowsResponseValidationFeature","allowsValidationFeature","assertRegExpAndSecurity","tuple","Array","isArray","Error","RegExp","byDefault","param","byDirectory","el","sync","byMethods","property","value","obj","byRoute","a","b","isDynamicRoute","localeCompare","byString","byTag","aName","bName","copy","JSON","parse","stringify","getAdditionalFeatures","logger","additionalFeatures","index","inheritProperty","additionalProperty","currentDoc","parentDoc","unshift","apply","getDocFeature","feature","warn","loggingPrefix","doc","getSecurityDefinitionByPath","openapiPath","pathSecurity","i","test","getMethodDoc","operationHandler","handleFilePath","filePath","absolutePath","resolve","process","cwd","existsSync","e","readFileSync","handleYaml","safeLoad","json","injectDependencies","handlers","dependencies","route","resolveParameterRefs","parameters","parameter","$ref","apiVersion","swagger","openapi","apiDocParameters","components","PARAMETER_REF_REGEX","match","exec","definition","resolveResponseRefs","responses","Object","keys","reduce","resolvedResponses","responseCode","response","apiDocResponses","RESPONSE_REF_REGEX","resolveRequestBodyRefs","requestBody","REQUEST_BODY_REF_REGEX","apiDocComponents","apiDocReqBodies","requestBodies","sortApiDocTags","sort","sortOperationDocTags","operationDoc","toAbsolutePath","part","withNoDuplicates","arr","seenParams","item","key","location","join","getBasePathsFromServers","servers","default","url","basePathsMap","server","basePath"],"sources":["../../src/util.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}